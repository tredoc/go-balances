// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: currency.sql

package db

import (
	"context"
)

const getAllCurrencies = `-- name: GetAllCurrencies :many
SELECT id, name FROM currencies
`

func (q *Queries) GetAllCurrencies(ctx context.Context) ([]Currency, error) {
	rows, err := q.db.QueryContext(ctx, getAllCurrencies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Currency
	for rows.Next() {
		var i Currency
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getCurrency = `-- name: GetCurrency :one
SELECT id, name FROM currencies
WHERE id = ?
`

func (q *Queries) GetCurrency(ctx context.Context, id uint64) (Currency, error) {
	row := q.db.QueryRowContext(ctx, getCurrency, id)
	var i Currency
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
